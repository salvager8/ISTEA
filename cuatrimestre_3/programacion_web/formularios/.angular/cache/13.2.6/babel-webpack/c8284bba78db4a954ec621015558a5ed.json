{"ast":null,"code":"import _classCallCheck from \"/home/salvis/Desktop/ISTEA/cuatrimestre_3/programacion_web/formularios/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/salvis/Desktop/ISTEA/cuatrimestre_3/programacion_web/formularios/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from \"@angular/core\";\nexport var ImagesService = /*#__PURE__*/function () {\n  function ImagesService() {\n    _classCallCheck(this, ImagesService);\n\n    this.allImages = IMAGESDETAILS;\n  } //este metodo nos retorna un listado completo de imagenes\n\n\n  _createClass(ImagesService, [{\n    key: \"getImages\",\n    value: function getImages() {\n      return this.allImages = IMAGESDETAILS.slice(0);\n    } //este metodo recibe un id por parametro y buscara dicho id dentro del array de imagenes\n\n  }, {\n    key: \"getImageById\",\n    value: function getImageById(id) {\n      return IMAGESDETAILS.slice(0).find(function (image) {\n        return image.id = id;\n      });\n    }\n  }]);\n\n  return ImagesService;\n}();\n\nImagesService.ɵfac = function ImagesService_Factory(t) {\n  return new (t || ImagesService)();\n};\n\nImagesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImagesService,\n  factory: ImagesService.ɵfac,\n  providedIn: 'root'\n});\nvar IMAGESDETAILS = [{\n  \"id\": 1,\n  \"brand\": \"adultorc\",\n  \"url\": \"\"\n}, {\n  \"id\": 2,\n  \"brand\": \"adultorc\",\n  \"url\": \"\"\n}, {\n  \"id\": 3,\n  \"brand\": \"adultorc\",\n  \"url\": \"\"\n}, {\n  \"id\": 4,\n  \"brand\": \"adultorc\",\n  \"url\": \"\"\n}, {\n  \"id\": 5,\n  \"brand\": \"bkeco\",\n  \"url\": \"\"\n}, {\n  \"id\": 6,\n  \"brand\": \"bkeco\",\n  \"url\": \"\"\n}, {\n  \"id\": 7,\n  \"brand\": \"bkeco\",\n  \"url\": \"\"\n}, {\n  \"id\": 8,\n  \"brand\": \"bkeco\",\n  \"url\": \"\"\n}, {\n  \"id\": 9,\n  \"brand\": \"bkmotor\",\n  \"url\": \"\"\n}, {\n  \"id\": 10,\n  \"brand\": \"bkmotor\",\n  \"url\": \"\"\n}, {\n  \"id\": 11,\n  \"brand\": \"bkmotor\",\n  \"url\": \"\"\n}, {\n  \"id\": 12,\n  \"brand\": \"bkmotor\",\n  \"url\": \"\"\n}, {\n  \"id\": 13,\n  \"brand\": \"bkmotor\",\n  \"url\": \"\"\n}, {\n  \"id\": 14,\n  \"brand\": \"bknene\",\n  \"url\": \"\"\n}, {\n  \"id\": 15,\n  \"brand\": \"bknene\",\n  \"url\": \"\"\n}, {\n  \"id\": 16,\n  \"brand\": \"bknene\",\n  \"url\": \"\"\n}, {\n  \"id\": 17,\n  \"brand\": \"bknene\",\n  \"url\": \"\"\n}];","map":{"version":3,"sources":["/home/salvis/Desktop/ISTEA/cuatrimestre_3/programacion_web/formularios/src/app/services/images.service.ts"],"names":["i0","ImagesService","allImages","IMAGESDETAILS","slice","id","find","image","ɵfac","ImagesService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";;AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,WAAaC,aAAb;AACI,2BAAc;AAAA;;AACV,SAAKC,SAAL,GAAiBC,aAAjB;AACH,GAHL,CAII;;;AAJJ;AAAA;AAAA,WAKI,qBAAY;AACR,aAAO,KAAKD,SAAL,GAAiBC,aAAa,CAACC,KAAd,CAAoB,CAApB,CAAxB;AACH,KAPL,CAQI;;AARJ;AAAA;AAAA,WASI,sBAAaC,EAAb,EAAiB;AACb,aAAOF,aAAa,CAACC,KAAd,CAAoB,CAApB,EAAuBE,IAAvB,CAA4B,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACF,EAAN,GAAWA,EAAf;AAAA,OAAjC,CAAP;AACH;AAXL;;AAAA;AAAA;;AAaAJ,aAAa,CAACO,IAAd,GAAqB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAIT,aAAV,GAAP;AAAoC,CAA7F;;AACAA,aAAa,CAACU,KAAd,GAAsB,aAAcX,EAAE,CAACY,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEZ,aAAT;AAAwBa,EAAAA,OAAO,EAAEb,aAAa,CAACO,IAA/C;AAAqDO,EAAAA,UAAU,EAAE;AAAjE,CAAtB,CAApC;AACA,IAAMZ,aAAa,GAAG,CAClB;AAAE,QAAM,CAAR;AAAW,WAAS,UAApB;AAAgC,SAAO;AAAvC,CADkB,EAElB;AAAE,QAAM,CAAR;AAAW,WAAS,UAApB;AAAgC,SAAO;AAAvC,CAFkB,EAGlB;AAAE,QAAM,CAAR;AAAW,WAAS,UAApB;AAAgC,SAAO;AAAvC,CAHkB,EAIlB;AAAE,QAAM,CAAR;AAAW,WAAS,UAApB;AAAgC,SAAO;AAAvC,CAJkB,EAKlB;AAAE,QAAM,CAAR;AAAW,WAAS,OAApB;AAA6B,SAAO;AAApC,CALkB,EAMlB;AAAE,QAAM,CAAR;AAAW,WAAS,OAApB;AAA6B,SAAO;AAApC,CANkB,EAOlB;AAAE,QAAM,CAAR;AAAW,WAAS,OAApB;AAA6B,SAAO;AAApC,CAPkB,EAQlB;AAAE,QAAM,CAAR;AAAW,WAAS,OAApB;AAA6B,SAAO;AAApC,CARkB,EASlB;AAAE,QAAM,CAAR;AAAW,WAAS,SAApB;AAA+B,SAAO;AAAtC,CATkB,EAUlB;AAAE,QAAM,EAAR;AAAY,WAAS,SAArB;AAAgC,SAAO;AAAvC,CAVkB,EAWlB;AAAE,QAAM,EAAR;AAAY,WAAS,SAArB;AAAgC,SAAO;AAAvC,CAXkB,EAYlB;AAAE,QAAM,EAAR;AAAY,WAAS,SAArB;AAAgC,SAAO;AAAvC,CAZkB,EAalB;AAAE,QAAM,EAAR;AAAY,WAAS,SAArB;AAAgC,SAAO;AAAvC,CAbkB,EAclB;AAAE,QAAM,EAAR;AAAY,WAAS,QAArB;AAA+B,SAAO;AAAtC,CAdkB,EAelB;AAAE,QAAM,EAAR;AAAY,WAAS,QAArB;AAA+B,SAAO;AAAtC,CAfkB,EAgBlB;AAAE,QAAM,EAAR;AAAY,WAAS,QAArB;AAA+B,SAAO;AAAtC,CAhBkB,EAiBlB;AAAE,QAAM,EAAR;AAAY,WAAS,QAArB;AAA+B,SAAO;AAAtC,CAjBkB,CAAtB","sourcesContent":["import * as i0 from \"@angular/core\";\nexport class ImagesService {\n    constructor() {\n        this.allImages = IMAGESDETAILS;\n    }\n    //este metodo nos retorna un listado completo de imagenes\n    getImages() {\n        return this.allImages = IMAGESDETAILS.slice(0);\n    }\n    //este metodo recibe un id por parametro y buscara dicho id dentro del array de imagenes\n    getImageById(id) {\n        return IMAGESDETAILS.slice(0).find(image => image.id = id);\n    }\n}\nImagesService.ɵfac = function ImagesService_Factory(t) { return new (t || ImagesService)(); };\nImagesService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ImagesService, factory: ImagesService.ɵfac, providedIn: 'root' });\nconst IMAGESDETAILS = [\n    { \"id\": 1, \"brand\": \"adultorc\", \"url\": \"\" },\n    { \"id\": 2, \"brand\": \"adultorc\", \"url\": \"\" },\n    { \"id\": 3, \"brand\": \"adultorc\", \"url\": \"\" },\n    { \"id\": 4, \"brand\": \"adultorc\", \"url\": \"\" },\n    { \"id\": 5, \"brand\": \"bkeco\", \"url\": \"\" },\n    { \"id\": 6, \"brand\": \"bkeco\", \"url\": \"\" },\n    { \"id\": 7, \"brand\": \"bkeco\", \"url\": \"\" },\n    { \"id\": 8, \"brand\": \"bkeco\", \"url\": \"\" },\n    { \"id\": 9, \"brand\": \"bkmotor\", \"url\": \"\" },\n    { \"id\": 10, \"brand\": \"bkmotor\", \"url\": \"\" },\n    { \"id\": 11, \"brand\": \"bkmotor\", \"url\": \"\" },\n    { \"id\": 12, \"brand\": \"bkmotor\", \"url\": \"\" },\n    { \"id\": 13, \"brand\": \"bkmotor\", \"url\": \"\" },\n    { \"id\": 14, \"brand\": \"bknene\", \"url\": \"\" },\n    { \"id\": 15, \"brand\": \"bknene\", \"url\": \"\" },\n    { \"id\": 16, \"brand\": \"bknene\", \"url\": \"\" },\n    { \"id\": 17, \"brand\": \"bknene\", \"url\": \"\" }\n];\n"]},"metadata":{},"sourceType":"module"}